from akcije.akcijeIO import ucitaj_akcije, sacuvaj_akcije
from datetime import date

def pregled_akcija(akcije, show_valid):
    akcije = ucitaj_akcije()
    zaglavlje = f"{'sifra':<5}{'naslov':<35}{'cena':<10}{'nova cena':>10}{'datum vazenja':<15}"
    print(zaglavlje)
    print('-'*len(zaglavlje))
    for i in range(0, len(akcije)):
        if akcije[i]["datum vazenja"] > str(date.today()) or show_valid == False:
            for j in range(0, len(akcije[i]['akcijske knjige'])):
                ispis = f"{akcije[i]['sifra']:<10}{akcije[i]['akcijske knjige'][j]['naslov']:<20}{akcije[i]['akcijske knjige'][j]['cena']:^20}{akcije[i]['akcijske knjige'][j]['nova cena']:^20}{akcije[i]['datum vazenja']:^20}"
                print(ispis)
    print('-'*len(zaglavlje))

def pretrazi_akcije_jednakost(kljuc, vrednost):
    akcije = ucitaj_akcije()
    filtritane_akcije = []

    for akcija in akcije:
        if vrednost == akcija[kljuc]:
            filtritane_akcije.append(akcija)
    return filtritane_akcije


def pretrazi_akcije_string(kljuc, vrednost):
    akcije = ucitaj_akcije()
    filtrirane_akcije = []
    if kljuc == 'sifra' or kljuc == 'nova cena' or kljuc == 'datum vazenja':
        for akcija in akcije:
            if vrednost.lower() in akcija[kljuc].lower():
                filtrirane_akcije.append(akcija)
        return filtrirane_akcije


def pretrazi_akcije_brojevi(kljuc, vrednost):
    akcije = ucitaj_akcije()
    filtrirane_akcije = []

    for akcija in akcije:
        if vrednost == akcija[kljuc]:
            filtrirane_akcije.append(akcija)

    return filtrirane_akcije


def pretrazi_akcije():
    akcije = ucitaj_akcije()
    show_valid == False
    print("1. Pretrazi akcije po sifri.")
    print("2. Pretrazi akcije po naslovu knjige.")
    print("3. Pretrazi akcije po autoru knjige.")
    print("4. Pretrazi akcije po kategoriji knjige.")
    stavka = int(input("Izaberite opciju: "))
    akcijee = []
    if stavka == 1:
        sifra = int(input("Unesite sifru: "))
        akcijee = pretrazi_akcije_jednakost('sifra', sifra)
    elif stavka == 2:
        naslov = input("Unesite nalsov: ")
        akcijee = pretrazi_akcije_string('naslov', naslov)
    elif stavka == 3:
        autor = input("Unesite autora: ")
        akcijee = pretrazi_akcije_string('autor', autor)
    elif stavka == 4:
        kategorija = input("Unesite kategoriju:")
        akcijee = pretrazi_akcije_string('kategorija', kategorija)
    else:
        print("Pogresan unos, pokusajte ponovo!")
    pregled_akcija(akcijee, show_valid)






from akcije.akcijeIO import ucitaj_akcije, sacuvaj_akcije
from datetime import date
from knjige.knjige import ucitaj_knjige
import re


knjige = ucitaj_knjige()


kljuc = ['naslov','autor','kategorija','sifra','datum vazenja','nova cena']

def ispis_table(akcije, show_valid):
    akcije = ucitaj_akcije()
    zaglavlje = f"{'sifra':<10}" \
                    f"{'naslov':<20}" \
                    f"{'cena':^20}" \
                    f"{'nova cena':^20}" \
                    f"{'datum vazenja':^20}"

    print(zaglavlje)
    print("-" * len(zaglavlje))
    for i in range(0, len(akcije)):
                if akcije[i]["datum vazenja"]>str(date.today()) or show_valid == False:
                    for j in range(0, len(akcije[i]['akcijske knjige'])):
                        ispis = f"{akcije[i]['sifra']:<10}" \
                           f"{akcije[i]['akcijske knjige'][j]['naslov']:<20}" \
                           f"{akcije[i]['akcijske knjige'][j]['cena']:^20}" \
                           f"{akcije[i]['akcijske knjige'][j]['nova cena']:^20}" \
                           f"{akcije[i]['datum vazenja']:^20}"

                        print(ispis)

def pretraga_akcija_string(kljuc, vrednost):
    akcije = ucitaj_akcije()
    filtrirane_akcije = []
    if kljuc == 'sifra' or kljuc=="nova cena" or kljuc=='datum vazenja':

        for akcija in akcije:
            if vrednost.lower() in akcija[kljuc].lower():
                filtrirane_akcije.append(akcija)
    else:
        for akcija in akcije:
            for akcijska_knjiga in akcija['akcijske knjige']:
                if akcijska_knjiga[kljuc].lower() == vrednost.lower():
                    filtrirane_akcije.append(akcija)
    return filtrirane_akcije


def pretraga_akcija_jednakost(kljuc, vrednost):
    akcije = ucitaj_akcije()
    filtritane_akcije = []

    for akcija in akcije:
        if vrednost == akcija[kljuc]:
            filtritane_akcije.append(akcija)
    return filtritane_akcije

def sortiranje_akcija(kljuc):
    akcije = ucitaj_akcije()
    for i in range(len(akcije)):
        for j in range(len(akcije)):
            if akcije[i][kljuc] < akcije[j][kljuc]:
                temp = akcije[i]
                akcije[i] = akcije[j]
                akcije[j] = temp

def sortirane_akcije():
    akcije = ucitaj_akcije()
    while True:
        print("\nSortiraj po"
              "\n1. sifri"
              "\n2. datum vazenja"
              "\n0. nazad")
        stavka = int(input("Opcija:"))
        if stavka == 1:
            sortiranje_akcija('sifra')
        elif stavka == 2:
            sortiranje_akcija('datum vazenja')
        elif stavka == 0:
            return False
        else:
            print("pogresan unos!")
        ispis_table(akcije, show_valid=False)

def pretraga_akcija():
    akcije = ucitaj_akcije()
    show_valid = False
    print("\n1. Pretraga po sifri")
    print("2. Pretraga po naslovu")
    print("3. Pretraga po autoru")
    print("4. Pretraga po kategoriji")
    print("0. Napusti pretragu")
    stavka = int(input("Izaberite stavku: "))
    akcije = []
    if stavka == 1:
        sifra = int(input("Unesite sifru: "))
        akcije = pretraga_akcija_jednakost("sifra", sifra)
    elif stavka == 2:
        naslov = input("Unesite nalsov: ")
        akcije =pretraga_akcija_string("naslov", naslov)
    elif stavka == 3:
        autor = input("Unesite autora: ")
        akcije = pretraga_akcija_string('autor', autor)
    elif stavka == 4:
        kategorija = input("Unesite kategoriju:")
        akcije = pretraga_akcija_string('kategorija', kategorija)
    elif stavka==0:
        return
    else:
        print("Pogresan unos, pokusajte ponovo!")
    ispis_table(akcije,show_valid)


def unos_sa_proverom(poruka, naziv_unosa="Unos"):
    while True:
        unos = input(poruka)
        if unos != '':
            greska = re.search(' ', unos)
            if greska == None:
                return unos
            else:
                print(f"{naziv_unosa} ne sme da sadrzi razmake!")
        else:
            print(f"{naziv_unosa} ne sme biti prazan!")

def dodavanje_akcije():
    akcije = ucitaj_akcije()

    nova_akcija= {"sifra": 1,
                  "akcijske knjige": [],
                  "datum vazenja": "12.06.2021",
                  }
    sifra = akcije[-1]['sifra']
    nova_akcija['sifra'] = sifra + 1

    dodavanje_knjige= True
    while dodavanje_knjige:
        sifra=unos_sa_proverom("unesite sifru knjige koju\nzelite da stavite u akciju('nazad' za povratak,'x' za prekid unosa knjiga)\nsifra:")
        if sifra == 'nazad':
            return
        elif sifra == 'x':
            dodavanje_knjige = False

        else:
            for knjiga in knjige:
                if knjiga['sifra']==int(sifra):
                    if knjiga['brisanje']== False:
                        nova_cena = float(input("\nUnesi novu cenu knjige: "))
                        knjiga['nova cena'] = nova_cena
                        nova_akcija['akcijske knjige'].append(knjiga)
                    else:
                        print('knjiga ne postoji!')
    datum_vazenja = input("\nUnesi datum vazenja akije: ")
    nova_akcija['datum_vazenja'] = datum_vazenja
    akcije.append(nova_akcija)
    if len(nova_akcija['akcijske knjige'])>0:
        sacuvaj_akcije(akcije)
        print('Nova akcija je dodata u bazu podataka. Sifra akcije=[%s]' % (nova_akcija['sifra']))


